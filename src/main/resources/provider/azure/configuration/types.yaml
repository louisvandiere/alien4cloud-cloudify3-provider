tosca_definitions_version: tosca_simple_yaml_1_0_0_wd03

template_name: cloudify-azure-types
template_author: Alien4cloud
template_version: 1.1.0-SNAPSHOT

imports:
  - tosca-normative-types:1.0.0.wd06-SNAPSHOT
  - cloudify3-common-types:1.1.0-SNAPSHOT

node_types:
  # configuration types
  alien.cloudify.azure.nodes.Image:
    abstract: true
    derived_from: tosca.nodes.Root
    properties:
      offer:
        type: string
      publisher:
        type: string
      sku:
        type: string
    capabilities:
      os:
        type: tosca.capabilities.OperatingSystem

  alien.cloudify.azure.nodes.InstanceType:
    abstract: true
    derived_from: tosca.nodes.Root
    properties:
      id:
        type: string
    capabilities:
      host:
        type: tosca.capabilities.Container

  alien.cloudify.azure.nodes.Compute:
    derived_from: tosca.nodes.Compute
    tags:
      _a4c_c3_derived_from: cloudify.azure.nodes.Server
      _a4c_c3_prop_map: >
        {"offer": "image_reference_offer", "publisher": "image_reference_publisher", "sku": "image_reference_sku", "user": "ssh_username", "instance_type": "vm_size"}
    properties:
      parameters:
        type: map
        entry_schema:
          type: string
        required: false
      publisher:
        type: string
        default: ''
      offer:
        type: string
        default: ''
      sku:
        type: string
        default: ''
      instance_type:
        type: string
        default: ''
      user:
        type: string
        default: ''
      cloudify_agent:
        type: alien.datatypes.AgentConfig
        required: false
    attributes:
      ip_address: { get_attribute: [SELF, ip] }
      public_ip_address: { get_attribute: [SELF, public_ip_address] }

  # alien.cloudify.azure.nodes.WindowsCompute:
  #   derived_from: alien.cloudify.azure.nodes.Compute
  #   tags:
  #     _a4c_c3_derived_from: cloudify.azure.nodes.WindowsInstance
  #     _a4c_c3_prop_map: >
  #       {"user": "cloudify_agent.user", "password": "cloudify_agent.password", "port": "cloudify_agent.port", "key_pair": null, "private_key_path": null}
  #   properties:
  #     user:
  #       type: string
  #       required: true
  #       default: Admin
  #       description: The user to connect to the created VM in case the user/password has been created in the image.
  #     password:
  #       type: string
  #       required: false
  #       description: The password to connect to the created VM in case the user/password has been created in the image.
  #     port:
  #       type: integer
  #       required: true
  #       description: The port which will be used by the agent to connect to the machine.
  #       default: 5985
  #     key_pair:
  #       type: string
  #       required: true
  #       description: |
  #         The existing keypair's name on Amazon.
  #         The private key must be copied to the manager's machine (or manager's docker container) to the path defined in private_key_path
  #     private_key_path:
  #       type: string
  #       required: true
  #       default: /root/.ssh/agent_key.pem
  #       description: |
  #         Path to the private key of the keypair defined in key_pair property on the manager's machine (or manager's docker container).
  #         Default is set to the agent private key path

  # alien.nodes.aws.PublicNetwork:
  #   derived_from: alien.nodes.PublicNetwork
  #   tags:
  #     _a4c_c3_derived_from: cloudify.aws.nodes.ElasticIP
  #     _a4c_c3_floating_ip_prop_map: >
  #       {"cidr": null, "ip_version": null, "network_id": null, "gateway_ip": null, "network_name": null}

  # alien.cloudify.aws.nodes.DeletableVolume:
  #   derived_from: tosca.nodes.BlockStorage
  #   description: >
  #     This represents a Block Storage (Volume) instance on AWS. Cloudify 3 can create this block and will delete it when the application is undeployed,
  #     even if the volume id is provided.
  #   properties:
  #     volume_type:
  #       type: string
  #       default: "standard"
  #       constraints:
  #         - valid_values: [ "standard", "io1", "gp2" ]
  #   attributes:
  #     device: { get_attribute: [SELF, device] }
  #   tags:
  #     _a4c_c3_derived_from: cloudify.aws.nodes.Volume
  #     _a4c_c3_prop_map: >
  #       {"size": {"path": "size", "unit": "GiB"}, "volume_id": "resource_id"}

  # alien.cloudify.aws.nodes.Volume:
  #   derived_from: alien.cloudify.aws.nodes.DeletableVolume
  #   description: >
  #     This represents a Block Storage (Volume) instance on AWS. Cloudify 3 can create this block but will not delete it when the application is undeployed.
  #     In case the volume is created, it's id will be injected back into alien's deployment topology so next deployment reuse it.
  #   tags:
  #     _a4c_persistent_resources: >
  #       {"aws_resource_id": "volume_id"}
